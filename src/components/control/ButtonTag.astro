---
interface Props {
	size?: string;
	dot?: boolean;
	href?: string;
	label?: string;
	variant?:
		| "default"
		| "primary"
		| "secondary"
		| "success"
		| "warning"
		| "error";
}
const { dot, href, label, variant = "default" }: Props = Astro.props;

// Generate color based on tag name for consistent coloring
const getTagColor = (name: string) => {
	if (!name) return "default";
	const colors = ["primary", "secondary", "success", "warning", "error"];
	let hash = 0;
	for (let i = 0; i < name.length; i++) {
		const char = name.charCodeAt(i);
		hash = (hash << 5) - hash + char;
		hash = hash & hash; // Convert to 32bit integer
	}
	return colors[Math.abs(hash) % colors.length];
};
---
<a href={href} aria-label={label} class={`notion-tag notion-tag-${variant}`} style="height: 1.75rem; font-size: 0.75rem; padding: 0.25rem 0.75rem; border-radius: 9999px; display: inline-flex; align-items: center; gap: 0.375rem; font-weight: 500; transition: all 0.2s ease-in-out;">
    {dot && <div class="h-1.5 w-1.5 bg-current rounded-full opacity-80"></div>}
    <span style="line-height: 1;"><slot></slot></span>
</a>
